{"ast":null,"code":"var _jsxFileName = \"/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/Progress/ProgressBar.js\";\nimport React from \"react\";\nexport default function ProgressBar({\n  focuseDuration\n}) {\n  // divide total time by 100 = time elapsed\n  // 1 tick = total/100\n  // increase width by 1 for time elapsed\n  // pause if paused and run if started\n  // stop and reset if stopped\n  console.log(focuseDuration);\n  const onePercent = focuseDuration / 100;\n  console.log(onePercent);\n  const progress = onePercent + \"%\";\n  console.log(progress);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: progress\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/Progress/ProgressBar.js"],"names":["React","ProgressBar","focuseDuration","console","log","onePercent","progress","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAAsC;AACjD;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,QAAMG,UAAU,GAAGH,cAAc,GAAC,GAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,QAAMC,QAAQ,GAAGD,UAAU,GAAC,GAA5B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEA,sBAAQ,uDACJ;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEF;AAAT,KANT,CAM8B;AAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADI,CAAR;AAYH","sourcesContent":["import React from \"react\";\n\nexport default function ProgressBar({focuseDuration}){\n    // divide total time by 100 = time elapsed\n    // 1 tick = total/100\n    // increase width by 1 for time elapsed\n    // pause if paused and run if started\n    // stop and reset if stopped\n    console.log(focuseDuration)\n    const onePercent = focuseDuration/100\n    console.log(onePercent)\n    const progress = onePercent+\"%\"\n    console.log(progress)\n\n    return (<>\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: progress }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}