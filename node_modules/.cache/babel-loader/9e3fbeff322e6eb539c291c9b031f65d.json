{"ast":null,"code":"var _jsxFileName = \"/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/Progress/ProgressBar.js\";\nimport React from \"react\";\nexport default function ProgressBar({\n  focusDuration,\n  session\n}) {\n  // divide total time by 100 = time elapsed\n  // 1 tick = total/100\n  // increase width by 1 for time elapsed\n  // pause if paused and run if started\n  // stop and reset if stopped\n  //is timer running \n  const delta = 100 / (focusDuration * 60);\n  let progress = 0;\n\n  while (session > 0) {\n    progress += delta;\n  }\n\n  ;\n  console.log(focusDuration);\n  console.log(session);\n  console.log(progress);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"100%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/Progress/ProgressBar.js"],"names":["React","ProgressBar","focusDuration","session","delta","progress","console","log","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAArB,EAA+C;AAC1D;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,KAAK,GAAG,OAAKF,aAAa,GAAC,EAAnB,CAAd;AACA,MAAIG,QAAQ,GAAG,CAAf;;AACA,SAAMF,OAAO,GAAG,CAAhB,EAAkB;AACdE,IAAAA,QAAQ,IAAID,KAAZ;AAAkB;;AAAA;AACtBE,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,sBAAQ,uDACJ;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KANT,CAM4B;AAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,CADI,CAAR;AAYH","sourcesContent":["import React from \"react\";\n\nexport default function ProgressBar({focusDuration, session }){\n    // divide total time by 100 = time elapsed\n    // 1 tick = total/100\n    // increase width by 1 for time elapsed\n    // pause if paused and run if started\n    // stop and reset if stopped\n    //is timer running \n    \n    const delta = 100/(focusDuration*60);\n    let progress = 0;\n    while(session > 0){\n        progress += delta};\n    console.log(focusDuration)\n    console.log(session)\n    console.log(progress)\n    return (<>\n        <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"100%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n            </>)\n}"]},"metadata":{},"sourceType":"module"}