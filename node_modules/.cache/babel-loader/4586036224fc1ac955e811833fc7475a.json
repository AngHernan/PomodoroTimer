{"ast":null,"code":"var _jsxFileName = \"/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/Progress/ProgressBar.js\";\nimport React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nexport default function ProgressBar({\n  focusDuration,\n  breakDuration,\n  session,\n  isTimerRunning\n}) {\n  let progress = 0;\n  let thisMany = null;\n\n  function isPaused(isTimerRunning) {\n    return isTimerRunning ? null : `PAUSED`;\n  }\n\n  function focusProgress(session, focusDuration) {\n    progress = (focusDuration * 60 - session.timeRemaining) / (focusDuration * 60) * 100;\n  }\n\n  function breakProgress(session, breakDuration) {\n    progress = (breakDuration * 60 - session.timeRemaining) / (breakDuration * 60) * 100;\n  }\n\n  function figureThisShitOut() {\n    if (session.label === \"Focusing\") {\n      progress = focusProgress;\n      thisMany = minutesToDuration(focusDuration);\n    } else {\n      progress = breakProgress;\n      thisMany = minutesToDuration(breakDuration);\n    }\n  }\n\n  if (isTimerRunning) {\n    if (session.label === \"Focusing\") {\n      console.log(focusProgress());\n      thisMany = minutesToDuration(focusDuration);\n    } else {\n      thisMany = minutesToDuration(breakDuration);\n    }\n  }\n\n  if (session !== null) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", thisMany, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, isPaused(isTimerRunning)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": progress // TODO: Increase aria-valuenow as elapsed time increases\n      ,\n      style: {\n        width: progress + \"%\"\n      } // TODO: Increase width % as elapsed time increases\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }))))));\n  } else {\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/angelhernandez/Documents/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/Progress/ProgressBar.js"],"names":["React","minutesToDuration","secondsToDuration","ProgressBar","focusDuration","breakDuration","session","isTimerRunning","progress","thisMany","isPaused","focusProgress","timeRemaining","breakProgress","figureThisShitOut","label","console","log","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,EAA2BC,iBAA3B,QAAmD,mBAAnD;AAKA,eAAe,SAASC,WAAT,CAAqB;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA,OAA/B;AAAwCC,EAAAA;AAAxC,CAArB,EAA8E;AAE3F,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,IAAf;;AAEA,WAASC,QAAT,CAAkBH,cAAlB,EAAkC;AAChC,WAAOA,cAAc,GAAE,IAAF,GAAU,QAA/B;AACD;;AACD,WAASI,aAAT,CAAuBL,OAAvB,EAAgCF,aAAhC,EAA+C;AAC7CI,IAAAA,QAAQ,GAAI,CAAEJ,aAAa,GAAC,EAAf,GAAqBE,OAAO,CAACM,aAA9B,KAA8CR,aAAa,GAAC,EAA5D,IAAgE,GAA5E;AACC;;AACH,WAASS,aAAT,CAAuBP,OAAvB,EAAgCD,aAAhC,EAA+C;AAC7CG,IAAAA,QAAQ,GAAI,CAAEH,aAAa,GAAC,EAAf,GAAqBC,OAAO,CAACM,aAA9B,KAA8CP,aAAa,GAAC,EAA5D,IAAgE,GAA5E;AACC;;AAEH,WAASS,iBAAT,GAA4B;AAC1B,QAAGR,OAAO,CAACS,KAAR,KAAgB,UAAnB,EAA8B;AAC5BP,MAAAA,QAAQ,GAAGG,aAAX;AACAF,MAAAA,QAAQ,GAAGR,iBAAiB,CAACG,aAAD,CAA5B;AACD,KAHD,MAGO;AACLI,MAAAA,QAAQ,GAAGK,aAAX;AACAJ,MAAAA,QAAQ,GAAGR,iBAAiB,CAACI,aAAD,CAA5B;AACD;AACF;;AAGD,MAAGE,cAAH,EAAkB;AAChB,QAAGD,OAAO,CAACS,KAAR,KAAgB,UAAnB,EAA8B;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAa,EAAzB;AAEAF,MAAAA,QAAQ,GAAGR,iBAAiB,CAACG,aAAD,CAA5B;AACD,KAJD,MAIO;AAELK,MAAAA,QAAQ,GAAGR,iBAAiB,CAACI,aAAD,CAA5B;AACC;AACF;;AAED,MAAIC,OAAO,KAAK,IAAhB,EAAqB;AACrB,wBAAQ,uDAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,OADL,aACKA,OADL,uBACKA,OAAO,CAAES,KADd,WAC0BN,QAD1B,aAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCP,iBAAiB,CAACI,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEM,aAAV,CADlB,eANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,QAAQ,CAACH,cAAD,CADb,CATF,CADF,CAFA,eAiBA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEW,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,uBAAc,GAHhB;AAIE,uBAAc,KAJhB;AAKE,uBAAeV,QALjB,CAK2B;AAL3B;AAME,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAEX,QAAQ,GAAC;AAAlB,OANT,CAMiC;AANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CAjBA,CAFI,CAAR;AAmCC,GApCD,MAoCO;AAEH,WAAO,IAAP;AACH;AACJ","sourcesContent":["import React from \"react\";\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\n\n\n\n\nexport default function ProgressBar({focusDuration, breakDuration, session, isTimerRunning }){\n  \n  let progress = 0;\n  let thisMany = null;\n\n  function isPaused(isTimerRunning) {\n    return isTimerRunning? null : `PAUSED`;\n  }\n  function focusProgress(session, focusDuration) {\n    progress = (((focusDuration*60) - session.timeRemaining)/(focusDuration*60)*100)\n    }        \n  function breakProgress(session, breakDuration) {\n    progress = (((breakDuration*60) - session.timeRemaining)/(breakDuration*60)*100)\n    }\n  \n  function figureThisShitOut(){\n    if(session.label===\"Focusing\"){\n      progress = focusProgress\n      thisMany = minutesToDuration(focusDuration)\n    } else {\n      progress = breakProgress\n      thisMany = minutesToDuration(breakDuration)\n    }\n  }\n\n\n  if(isTimerRunning){\n    if(session.label===\"Focusing\"){\n      console.log(focusProgress());\n      \n      thisMany = minutesToDuration(focusDuration)\n    } else {\n      \n      thisMany = minutesToDuration(breakDuration)\n      }\n    }\n       \n    if (session !== null){\n    return (<>\n\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n                {session?.label} for {thisMany} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n            {secondsToDuration(session?.timeRemaining)} remaining\n            </p>\n            <h3 >\n                {isPaused(isTimerRunning)}\n            </h3>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progress} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: progress+\"%\"}} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>    \n        </>)\n    } else {\n        \n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}